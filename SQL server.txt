 O QUE SÃO SGBDS:
	Softwares para padronizar banco de dados.
	funciona como uma interface entre os dados e sistemas/pessoas
	
	Tipos
		RELACIONAIS (SQL server Oracel MySQL)
			são pra sistemas que precisam de uma confiabilidade grande dos dados:
			vendas, controle forte de estoque etc
		NOSQL (MongoDB, Neo4j, Firebase)
			Voltados para outros cenarios, como performance, permitindo grande volume de dados
			
	Tabela no PD é como uma planilha
		cada registro é uma linha
		cada coluna são as informações/dados do registro
		
		Tipo da coluna: insica a informação  a ser armazenada
			ATOMICIDADE - garante que todos os dados estão corretos antes de colocar numa tabela
			
			CONSISTENCIA DOS DADOS - A informação so persiste num ciclo quando ela esta pronta em todos os bancos.
									- uma consulta so pode ser feita quando o dado persiste
				reduzir concorrencia e carga do banco de dados criando novas instancias
				espelhar banco em tempo real.
				
	Bancos relacionais são altamente tipados
		int
		bigint
		varchar() -> limite dentro do parenteses (ate 4000)
		char -> igual o varchar, mas enche o restante do campo com espaços
		
	funções metodos encapsulados que ja possuem uma dinamica propia para atender uma solicitação
	
	CHAVE PRIMARIA
		Identifica um registro, 
		tem que ser unica
		Gera melhor performace, idexando todos os registros, query mais rapida.
		Pode ser unica ou composta 
		
		Comum criar coluna numerica, ou usar dado unico como CPF
	
	CHAVE ESTRANGEIRA
	
	faz a relação de uma tabela com outra
	sempre sera uma copia de uma chave primaria
	
	
COMANDOS:
create database "Nomedobanco" -> cria um novo banco de dados

drop table "Nomedobanco" -> deleta tabela

alt + F1 - nome da tabela selecionado - informações

select * from - seleciona todos
	
	select *, convert(varchar, DataSOlicitacao) from Pedido 
	select *, convert(varchar, DataSOlicitacao, 103) from Pedido


		Especificidades so comando Select
		
		isnull(Campo, retorno) -> se o campo for nulo retorna o segundo parametro

		select *, case when IpoPessoa = 'J' then 'Juridica' end -> exibe juridica onde TipoPessoa for J
		
		select isnull(DataCriacao, getdate()), * from clientes -> retorna todos registros onde DataCriacao é nulo, e exibe com data atual.

insert:
	insert into clientes (codigo, nome, TipoPessoa) values (1, 'Breno', 'F');
	insert clientes (codigo, nome, TipoPessoa) values (1, 'Breno', 'F');
	insert clientes (codigo, nome, TipoPessoa) values (1, 'Breno', 'F');
	insert clientes values (1, 'Breno', 'F');
	insert clientes values (1, 'Breno', 'F'), (1, 'Breno', 'F');
	
Update:
	update clientes set Codigo = 7, Nome = 'Jose' where TipoPessoa = 'J'
	
Delete:
	delete from clientes where Codigo in(5,4,3,2)
	
Criar chave estrangeira:

	alter tavle Clentes add contraint pl_cliente primary key (Codigo)
	
Contorlar inserção chave primaria
	Clique direito na tabela > Design > Especificação de Identidade (campos int)
	
Criar chave estrangeira	
	alter table PedidoItem add constraint fk_pedido foreign key (CodigoPedio) references Pedido (Codigo)


				
			
		